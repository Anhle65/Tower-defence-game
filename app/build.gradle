import org.gradle.api.tasks.testing.logging.TestExceptionFormat

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // use hibernate to persist (java) domain entities for us, aka JPA implementation
    implementation 'org.hibernate:hibernate-core:6.6.5.Final'

    // use a in-memory database to store entities (can be substituted with any database)
    implementation 'com.h2database:h2:2.3.232'

    // Sqlite as persistent DB
    implementation 'org.xerial:sqlite-jdbc:3.48.0.0'
    implementation 'org.hibernate.orm:hibernate-community-dialects:6.6.5.Final'

    //Cucumber dependencies
    testImplementation 'io.cucumber:cucumber-java:7.20.1'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.20.1'
    testImplementation 'org.junit.platform:junit-platform-suite:1.11.4'

    // Logging facility (lab 6) with YAML configuration (supplied by jackson)
    implementation 'org.apache.logging.log4j:log4j-core:2.24.3'
    implementation 'org.apache.logging.log4j:log4j-api:2.24.3'

    // JSON deserialization (for external REST API and Log4j YAML config)
    implementation 'com.fasterxml.jackson.core:jackson-core:2.18.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.18.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
    runtimeOnly 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.18.2'

    // Mocking (lab 6)
    implementation 'org.mockito:mockito-core:5.15.2'}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'uc.seng301.towerdefence.asg4.App'
}

tasks.run {
    standardInput = System.in
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    filter {
        includeTestsMatching "uc.seng301.towerdefence.asg4.unittests.*"
        includeTestsMatching "uc.seng301.towerdefence.asg4.smoketests.*"

    }
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

tasks.register("cucumber", Test) {
    testLogging.showStandardStreams = true
    useJUnitPlatform()
    filter {
        includeTestsMatching "uc.seng301.towerdefence.asg4.cucumber.*"
    }
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat TestExceptionFormat.FULL
        showStandardStreams true
    }
}
